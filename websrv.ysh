#!/usr/bin/env ysh

var port = 8080

rm -f http
mkfifo http

# http uses \r\n
proc hwrite {
  write --end $'\r\n' @ARGV
}

source --builtin ysh/args.ysh

parser (&spec) {
  flag -v --verbose
}

var arg = parseArgs(spec, ARGV)
setglobal VERBOSE = arg.verbose

proc tee {
  if (VERBOSE) {
    command tee -a @ARGV < /dev/stdin
  } else {
    cat /dev/stdin >> $[ARGV[0]]
  }
}

proc parse_header {
  var c = 0
  while read line {
    if (len(line) < 2) {
     break
    }
    echo $line
    # "security"
    assert [c < 100]
    setvar c += 1
  }
}

proc handle_request () {
  var message = $(parse_header)

  hwrite 'HTTP/1.0 200 OK'
  hwrite "Content-Length: $[len(message)+1]"
  hwrite ''
  write $message
}

trap ' rm http' EXIT SIGINT

nc -l -k -p $port < http | \
   { while (true) { handle_request } | tee http }


# TODO: needs a trap
# rm http
